{"version":3,"file":"frontend-platform.d.js","names":[],"sources":["../src/frontend-platform.d.ts"],"sourcesContent":["// frontend-platform currently doesn't provide types... do it ourselves for i18n module at least.\n// We can remove this in the future when we migrate to frontend-shell, or when frontend-platform gets types\n// (whichever comes first).\n\ndeclare module '@edx/frontend-platform/i18n' {\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  import { injectIntl as _injectIntl } from 'react-intl';\n  /** @deprecated Use useIntl() hook instead. */\n  export const injectIntl: typeof _injectIntl;\n  /** @deprecated Use useIntl() hook instead. */\n  export const intlShape: any;\n\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  export {\n    createIntl,\n    FormattedDate,\n    FormattedTime,\n    FormattedRelativeTime,\n    FormattedNumber,\n    FormattedPlural,\n    FormattedMessage,\n    defineMessages,\n    IntlProvider,\n    useIntl,\n  } from 'react-intl';\n\n  // Other exports from the i18n module:\n  export const configure: any;\n  export const getPrimaryLanguageSubtag: (code: string) => string;\n  export const getLocale: (locale?: string) => string;\n  export const getMessages: any;\n  export const isRtl: (locale?: string) => boolean;\n  export const handleRtl: any;\n  export const mergeMessages: any;\n  export const LOCALE_CHANGED: any;\n  export const LOCALE_TOPIC: any;\n  export const getCountryList: any;\n  export const getCountryMessages: any;\n  export const getLanguageList: any;\n  export const getLanguageMessages: any;\n}\n"],"mappings":"","ignoreList":[]}